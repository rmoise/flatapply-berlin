{
  "name": "WG-Gesucht Complete Scraper",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 30
            }
          ]
        }
      },
      "name": "Every 30 Minutes",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [250, 300],
      "id": "1"
    },
    {
      "parameters": {
        "url": "https://www.wg-gesucht.de/",
        "options": {
          "redirect": {
            "redirect": {
              "followRedirects": true
            }
          }
        }
      },
      "name": "Load Homepage",
      "type": "n8n-nodes-base.httpRequest",
      "position": [450, 300],
      "id": "2"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Extract cookies and prepare login\nconst cookies = $input.item.headers['set-cookie'] || [];\nconst cookieString = cookies.map(c => c.split(';')[0]).join('; ');\n\nreturn {\n  cookieString,\n  loginUrl: 'https://www.wg-gesucht.de/ajax/sessions.php?action=login',\n  searchUrl: 'https://www.wg-gesucht.de/wohnungen-in-Berlin.8.2.1.0.html'\n};"
      },
      "name": "Prepare Login",
      "type": "n8n-nodes-base.code",
      "position": [650, 300],
      "id": "3"
    },
    {
      "parameters": {
        "url": "={{$json.loginUrl}}",
        "method": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Cookie",
              "value": "={{$json.cookieString}}"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"
            }
          ]
        },
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "login_email_username",
              "value": "={{$credentials.wgGesucht.email}}"
            },
            {
              "name": "login_password",
              "value": "={{$credentials.wgGesucht.password}}"
            },
            {
              "name": "login_form_auto_login",
              "value": "1"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "name": "Login to WG-Gesucht",
      "type": "n8n-nodes-base.httpRequest",
      "position": [850, 300],
      "id": "4"
    },
    {
      "parameters": {
        "url": "={{$node['Prepare Login'].json.searchUrl}}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Cookie",
              "value": "={{$json.headers['set-cookie'].join('; ')}}"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"
            }
          ]
        }
      },
      "name": "Get Search Results",
      "type": "n8n-nodes-base.httpRequest",
      "position": [1050, 300],
      "id": "5"
    },
    {
      "parameters": {
        "extractionValues": {
          "values": [
            {
              "key": "listings",
              "cssSelector": "a[href*='/wohnungen-in-Berlin-']",
              "returnValue": "attribute",
              "attribute": "href",
              "returnArray": true
            }
          ]
        },
        "options": {}
      },
      "name": "Extract Listing URLs",
      "type": "n8n-nodes-base.htmlExtract",
      "position": [1250, 300],
      "id": "6"
    },
    {
      "parameters": {
        "fieldToSplitOut": "listings",
        "options": {}
      },
      "name": "Split Into Items",
      "type": "n8n-nodes-base.itemLists",
      "position": [1450, 300],
      "id": "7"
    },
    {
      "parameters": {
        "amount": 2000,
        "unit": "ms"
      },
      "name": "Wait 2 Seconds",
      "type": "n8n-nodes-base.wait",
      "position": [1650, 300],
      "id": "8"
    },
    {
      "parameters": {
        "url": "=https://www.wg-gesucht.de{{$json.listings}}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Cookie",
              "value": "={{$node['Login to WG-Gesucht'].json.headers['set-cookie'].join('; ')}}"
            },
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"
            }
          ]
        }
      },
      "name": "Fetch Listing Page",
      "type": "n8n-nodes-base.httpRequest",
      "position": [1850, 300],
      "id": "9"
    },
    {
      "parameters": {
        "extractionValues": {
          "values": [
            {
              "key": "title",
              "cssSelector": "h1, .headline-detailed-view-title",
              "returnValue": "text"
            },
            {
              "key": "price",
              "cssSelector": ".headline-detailed-view-panel-box",
              "returnValue": "text",
              "regex": "(\\d+)\\s*€"
            },
            {
              "key": "size",
              "cssSelector": ".headline-detailed-view-panel-box",
              "returnValue": "text",
              "regex": "(\\d+)\\s*m²"
            },
            {
              "key": "district",
              "cssSelector": "a[href*='Berlin-']",
              "returnValue": "text"
            },
            {
              "key": "description",
              "cssSelector": ".freitext, #ad_description_text",
              "returnValue": "text"
            },
            {
              "key": "phoneButton",
              "cssSelector": "a[onclick*='show_email_phone']",
              "returnValue": "attribute",
              "attribute": "onclick"
            }
          ]
        }
      },
      "name": "Extract Basic Info",
      "type": "n8n-nodes-base.htmlExtract",
      "position": [2050, 300],
      "id": "10"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Clean and structure the data\nconst item = $input.item.json;\n\n// Extract listing ID from URL\nconst urlMatch = item.url.match(/\\.(\\d+)\\.html/);\nconst externalId = urlMatch ? `wg_${urlMatch[1]}` : `wg_${Date.now()}`;\n\n// Clean price and size\nconst price = parseInt(item.price) || 0;\nconst size = parseInt(item.size) || 0;\n\n// Extract district from URL if not found\nlet district = item.district || '';\nif (!district && item.url) {\n  const districtMatch = item.url.match(/Berlin-([^.]+)/);\n  if (districtMatch) {\n    district = districtMatch[1].replace(/-/g, ' ');\n  }\n}\n\n// Check if we need to reveal phone\nconst needsPhoneReveal = !!item.phoneButton;\n\nreturn {\n  url: item.url,\n  externalId,\n  title: item.title || 'No title',\n  price,\n  size,\n  district,\n  description: item.description || '',\n  needsPhoneReveal,\n  platform: 'wg_gesucht',\n  scrapedAt: new Date().toISOString()\n};"
      },
      "name": "Process Listing Data",
      "type": "n8n-nodes-base.code",
      "position": [2250, 300],
      "id": "11"
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$json.needsPhoneReveal}}",
              "value2": true
            }
          ]
        }
      },
      "name": "Needs Phone?",
      "type": "n8n-nodes-base.if",
      "position": [2450, 300],
      "id": "12"
    },
    {
      "parameters": {
        "url": "=https://www.wg-gesucht.de/ajax/asset.php?id={{$json.externalId.replace('wg_', '')}}&action=show_email_phone",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Cookie",
              "value": "={{$node['Login to WG-Gesucht'].json.headers['set-cookie'].join('; ')}}"
            },
            {
              "name": "X-Requested-With",
              "value": "XMLHttpRequest"
            }
          ]
        }
      },
      "name": "Reveal Phone Number",
      "type": "n8n-nodes-base.httpRequest",
      "position": [2650, 200],
      "id": "13"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Extract phone from response\nconst phoneData = $input.item.json;\nconst phoneMatch = phoneData.match(/([+\\d\\s-]{10,})/);\nconst phone = phoneMatch ? phoneMatch[1].trim() : '';\n\nreturn {\n  ...$node['Process Listing Data'].json,\n  contactPhone: phone\n};"
      },
      "name": "Extract Phone",
      "type": "n8n-nodes-base.code",
      "position": [2850, 200],
      "id": "14"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem", 
        "jsCode": "// Pass through without phone\nreturn {\n  ...$json,\n  contactPhone: ''\n};"
      },
      "name": "No Phone Needed",
      "type": "n8n-nodes-base.code",
      "position": [2650, 400],
      "id": "15"
    },
    {
      "parameters": {},
      "name": "Merge Phone Data",
      "type": "n8n-nodes-base.merge",
      "position": [3050, 300],
      "id": "16"
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": "public",
        "table": "listings",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "platform": "={{$json.platform}}",
            "external_id": "={{$json.externalId}}",
            "url": "={{$json.url}}",
            "title": "={{$json.title}}",
            "description": "={{$json.description}}",
            "price": "={{$json.price}}",
            "size": "={{$json.size}}",
            "district": "={{$json.district}}",
            "contact_phone": "={{$json.contactPhone}}",
            "scraped_at": "={{$json.scrapedAt}}",
            "allows_auto_apply": "={{$json.contactPhone ? true : false}}"
          }
        },
        "conflictFields": ["platform", "external_id"],
        "options": {}
      },
      "name": "Save to Supabase",
      "type": "n8n-nodes-base.supabase",
      "position": [3250, 300],
      "id": "17"
    },
    {
      "parameters": {
        "operation": "getAll",
        "schema": "public",
        "table": "user_preferences",
        "returnAll": true,
        "filters": {
          "conditions": [
            {
              "keyName": "notifications_enabled",
              "condition": "eq",
              "keyValue": true
            }
          ]
        }
      },
      "name": "Get User Preferences",
      "type": "n8n-nodes-base.supabase",
      "position": [3450, 300],
      "id": "18"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Check if listing matches user preferences\nconst listing = $node['Save to Supabase'].json;\nconst prefs = $input.item.json;\n\n// Check price\nif (listing.price > prefs.max_rent) return null;\n\n// Check size\nif (listing.size < prefs.min_size) return null;\n\n// Check district\nif (prefs.preferred_districts && prefs.preferred_districts.length > 0) {\n  const districtMatch = prefs.preferred_districts.some(d => \n    listing.district.toLowerCase().includes(d.toLowerCase())\n  );\n  if (!districtMatch) return null;\n}\n\nreturn {\n  userId: prefs.user_id,\n  userEmail: prefs.email,\n  listing: listing\n};"
      },
      "name": "Check Match",
      "type": "n8n-nodes-base.code",
      "position": [3650, 300],
      "id": "19"
    },
    {
      "parameters": {
        "operation": "insert",
        "schema": "public",
        "table": "matches",
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "user_id": "={{$json.userId}}",
            "listing_id": "={{$json.listing.externalId}}",
            "platform": "wg_gesucht",
            "score": 0.8,
            "matched_at": "={{new Date().toISOString()}}"
          }
        }
      },
      "name": "Create Match",
      "type": "n8n-nodes-base.supabase",
      "position": [3850, 300],
      "id": "20"
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "send",
        "sendTo": "={{$json.userEmail}}",
        "subject": "New WG-Gesucht Match: {{$json.listing.title}}",
        "message": "=<h2>New listing match!</h2>\n<p><strong>{{$json.listing.title}}</strong></p>\n<ul>\n<li>Price: €{{$json.listing.price}}</li>\n<li>Size: {{$json.listing.size}}m²</li>\n<li>District: {{$json.listing.district}}</li>\n{{$json.listing.contactPhone ? '<li>Phone: ' + $json.listing.contactPhone + '</li>' : ''}}\n</ul>\n<p>{{$json.listing.description.substring(0, 200)}}...</p>\n<a href=\"{{$json.listing.url}}\">View Listing</a>",
        "options": {}
      },
      "name": "Send Email",
      "type": "n8n-nodes-base.emailSend",
      "position": [4050, 300],
      "id": "21"
    }
  ],
  "connections": {
    "Every 30 Minutes": {
      "main": [[{"node": "Load Homepage", "type": "main", "index": 0}]]
    },
    "Load Homepage": {
      "main": [[{"node": "Prepare Login", "type": "main", "index": 0}]]
    },
    "Prepare Login": {
      "main": [[{"node": "Login to WG-Gesucht", "type": "main", "index": 0}]]
    },
    "Login to WG-Gesucht": {
      "main": [[{"node": "Get Search Results", "type": "main", "index": 0}]]
    },
    "Get Search Results": {
      "main": [[{"node": "Extract Listing URLs", "type": "main", "index": 0}]]
    },
    "Extract Listing URLs": {
      "main": [[{"node": "Split Into Items", "type": "main", "index": 0}]]
    },
    "Split Into Items": {
      "main": [[{"node": "Wait 2 Seconds", "type": "main", "index": 0}]]
    },
    "Wait 2 Seconds": {
      "main": [[{"node": "Fetch Listing Page", "type": "main", "index": 0}]]
    },
    "Fetch Listing Page": {
      "main": [[{"node": "Extract Basic Info", "type": "main", "index": 0}]]
    },
    "Extract Basic Info": {
      "main": [[{"node": "Process Listing Data", "type": "main", "index": 0}]]
    },
    "Process Listing Data": {
      "main": [[{"node": "Needs Phone?", "type": "main", "index": 0}]]
    },
    "Needs Phone?": {
      "main": [
        [{"node": "Reveal Phone Number", "type": "main", "index": 0}],
        [{"node": "No Phone Needed", "type": "main", "index": 0}]
      ]
    },
    "Reveal Phone Number": {
      "main": [[{"node": "Extract Phone", "type": "main", "index": 0}]]
    },
    "Extract Phone": {
      "main": [[{"node": "Merge Phone Data", "type": "main", "index": 0}]]
    },
    "No Phone Needed": {
      "main": [[{"node": "Merge Phone Data", "type": "main", "index": 1}]]
    },
    "Merge Phone Data": {
      "main": [[{"node": "Save to Supabase", "type": "main", "index": 0}]]
    },
    "Save to Supabase": {
      "main": [[{"node": "Get User Preferences", "type": "main", "index": 0}]]
    },
    "Get User Preferences": {
      "main": [[{"node": "Check Match", "type": "main", "index": 0}]]
    },
    "Check Match": {
      "main": [[{"node": "Create Match", "type": "main", "index": 0}]]
    },
    "Create Match": {
      "main": [[{"node": "Send Email", "type": "main", "index": 0}]]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateId": "wg-gesucht-complete-scraper"
  },
  "pinData": {},
  "versionId": "1.0.0",
  "triggerCount": 1,
  "tags": []
}